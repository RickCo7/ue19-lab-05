name: Build and Publish Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Log in to GitHub Docker registry
      - name: Log in to GitHub Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}  # GitHub username
          password: ${{ secrets.GITHUB_TOKEN }}  # GitHub token for authentication

      # 3. Build Docker image
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: ghcr.io/rickco7/ue19-lab-05:latest  # Correct tag as per your request

      # 4. Cache Trivy DB
      - name: Cache Trivy DB
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: ${{ runner.os }}-trivy-db
          restore-keys: |
            ${{ runner.os }}-trivy-db

      # 5. Scan Docker image with Trivy for vulnerabilities
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.28.0  # Use the latest stable version
        with:
          image-ref: ghcr.io/rickco7/ue19-lab-05:latest  # Correct input for the image to be scanned
          format: 'table'  # Format of the output (can be 'json', 'table', etc.)
          exit-code: 1  # Fail the workflow if vulnerabilities are found (exit code 1)

      # 6. Push Docker image if no vulnerabilities found
      - name: Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/rickco7/ue19-lab-05:latest  # Correct tag as per your request
